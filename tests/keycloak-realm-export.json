{
  "realm": "keeptest",
  "enabled": true,
  "users": [
    {
      "username": "testuser@example.com",
      "email": "testuser@example.com",
      "enabled": true,
      "firstName": "Test",
      "lastName": "User",
      "credentials": [
        {
          "type": "password",
          "value": "testpassword",
          "temporary": false
        }
      ],
      "attributes": {
        "keep_role": "admin"
      },
      "realmRoles": ["default-roles-keep", "uma_authorization"],
      "clientRoles": {
        "realm-management": ["view-users", "query-users"]
      }
    },
    {
      "username": "admin@keeptest.com",
      "email": "admin@keeptest.com",
      "enabled": true,
      "firstName": "Admin",
      "lastName": "User",
      "credentials": [
        {
          "type": "password",
          "value": "adminpassword",
          "temporary": false
        }
      ],
      "realmRoles": ["default-roles-keep", "admin"],
      "clientRoles": {
        "realm-management": ["realm-admin"]
      }
    }
  ],
  "roles": {
    "realm": [
      {
        "name": "default-roles-keep",
        "description": "Default role for the Keep realm",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "admin",
        "description": "Administrator role for the Keep realm",
        "composite": false,
        "clientRole": false
      }
    ]
  },
  "clients": [
    {
      "clientId": "keep",
      "name": "Keep Application",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [],
      "protocol": "openid-connect",
      "attributes": {
        "access.token.lifespan": "3600"
      },
      "secret": "keycloaktestsecret",
      "directAccessGrantsEnabled": true,
      "publicClient": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "fullScopeAllowed": true,
      "authorizationServicesEnabled": true,
      "serviceAccountsEnabled": true,
      "defaultClientScopes": ["email", "roles", "web-origins", "profile", "active_organization"],
      "optionalClientScopes": ["offline_access", "microprofile-jwt", "phone", "address"],
      "access": {
        "view": true,
        "configure": true,
        "manage": true
      },
      "protocolMappers": [
        {
          "name": "keep-audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "keep",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "keep-tenant-id-claim",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.name": "keep_tenant_id",
            "claim.value": "keep",
            "id.token.claim": "true",
            "access.token.claim": "true"
          }
        },
        {
          "name": "keep-role-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "keep_role",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "keep_role",
            "jsonType.label": "String"
          }
        },
        {
          "name": "keep-organization-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-active-organization-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "lightweight.claim": "false",
            "access.token.claim": "true",
            "claim.name": "active_organization",
            "included.active.organization.properties": "id, name, role, attribute",
            "jsonType.label": "JSON"
          }
        }
      ]
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients"
}
