FROM python:3.13.5-alpine as base

# Install bash and runtime dependencies for grpc
RUN apk add --no-cache bash libstdc++

ENV PYTHONFAULTHANDLER=1 \
    PYTHONHASHSEED=random \
    PYTHONUNBUFFERED=1

# THIS IS FOR DEBUGGING PURPOSES
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends \
#     iproute2 \
#    net-tools \
#    procps && \
#    rm -rf /var/lib/apt/lists/*

RUN addgroup -g 1000 keep && \
    adduser -u 1000 -G keep -s /bin/sh -D keep
WORKDIR /app

FROM base as builder

# Install build dependencies for Alpine
RUN apk add --no-cache \
    gcc \
    g++ \
    musl-dev \
    libffi-dev \
    openssl-dev \
    postgresql-dev \
    mysql-client \
    build-base \
    linux-headers \
    git

ENV PIP_DEFAULT_TIMEOUT=100 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    POETRY_VERSION=1.3.2

RUN pip install "poetry==$POETRY_VERSION"
RUN python -m venv /venv
COPY pyproject.toml poetry.lock ./
RUN poetry export -f requirements.txt --output requirements.txt --without-hashes --only main && \
    /venv/bin/python -m pip install --upgrade -r requirements.txt && \
    pip uninstall -y poetry
COPY keep keep
COPY ee keep/ee
COPY examples examples
COPY keep-ui/public/icons/unknown-icon.png unknown-icon.png
RUN /venv/bin/pip install --use-deprecated=legacy-resolver . && \
    rm -rf /root/.cache/pip && \
    find /venv -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true && \
    find /venv -type f -name "*.pyc" -delete 2>/dev/null || true

FROM base as final
ENV PATH="/venv/bin:${PATH}"
ENV VIRTUAL_ENV="/venv"
ENV EE_PATH="ee"
COPY --from=builder /venv /venv
COPY --from=builder /app/examples /examples
COPY --from=builder /app/unknown-icon.png unknown-icon.png
# as per Openshift guidelines, https://docs.openshift.com/container-platform/4.11/openshift_images/create-images.html#use-uid_create-images
RUN chgrp -R 0 /app && chmod -R g=u /app && \
    chown -R keep:keep /app && \
    chown -R keep:keep /venv
USER keep

ENTRYPOINT ["/venv/lib/python3.13/site-packages/keep/entrypoint.sh"]

CMD ["gunicorn", "keep.api.api:get_app", "--bind" , "0.0.0.0:8080" , "--workers", "4" , "-k" , "uvicorn.workers.UvicornWorker", "-c", "/venv/lib/python3.13/site-packages/keep/api/config.py", "--preload"]
