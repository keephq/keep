"""Add RuleEventGroup

Revision ID: 8d4dc7d44a9c
Revises: 3f056d747d9e
Create Date: 2024-11-29 22:18:23.704507

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "8d4dc7d44a9c"
down_revision = "3f056d747d9e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ruleeventgroup",
        sa.Column("state", sa.JSON(), nullable=True),
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("rule_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("expires", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["rule_id"],
            ["rule.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("rule", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "create_on",
                sqlmodel.sql.sqltypes.AutoString(),
                nullable=False,
                server_default="any",
            ),
        )


def downgrade() -> None:
    op.drop_table("ruleeventgroup")
    with op.batch_alter_table("rule", schema=None) as batch_op:
        batch_op.drop_column("create_on")
