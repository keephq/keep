"""Deduplication

Revision ID: e066535d7d76
Revises: 1aacee84447e
Create Date: 2024-09-11 10:03:54.782474

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "e066535d7d76"
down_revision = "1aacee84447e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("alertdeduplicationrule", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
        )
        batch_op.add_column(
            sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
        )
        batch_op.add_column(sa.Column("last_updated", sa.DateTime(), nullable=False))
        batch_op.add_column(
            sa.Column(
                "last_updated_by", sqlmodel.sql.sqltypes.AutoString(), nullable=False
            )
        )
        batch_op.add_column(sa.Column("created_at", sa.DateTime(), nullable=False))
        batch_op.add_column(
            sa.Column("created_by", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
        )
        batch_op.add_column(sa.Column("enabled", sa.Boolean(), nullable=False))
        batch_op.alter_column(
            "provider_type",
            existing_type=sa.TEXT(),
            type_=sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        )
        batch_op.create_index(
            batch_op.f("ix_alertdeduplicationrule_name"), ["name"], unique=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("preset", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_constraint(None, type_="unique")
        batch_op.drop_index(batch_op.f("ix_preset_tenant_id"))
        batch_op.drop_index(batch_op.f("ix_preset_created_by"))
        batch_op.alter_column("id", existing_type=sa.CHAR(length=32), nullable=True)
        batch_op.alter_column("options", existing_type=sqlite.JSON(), nullable=False)

    with op.batch_alter_table("alertdeduplicationrule", schema=None) as batch_op:
        batch_op.add_column(sa.Column("priority", sa.INTEGER(), nullable=False))
        batch_op.drop_index(batch_op.f("ix_alertdeduplicationrule_name"))
        batch_op.alter_column(
            "provider_type",
            existing_type=sqlmodel.sql.sqltypes.AutoString(),
            type_=sa.TEXT(),
            nullable=True,
        )
        batch_op.drop_column("enabled")
        batch_op.drop_column("created_by")
        batch_op.drop_column("created_at")
        batch_op.drop_column("last_updated_by")
        batch_op.drop_column("last_updated")
        batch_op.drop_column("description")
        batch_op.drop_column("name")

    with op.batch_alter_table("alertaudit", schema=None) as batch_op:
        batch_op.alter_column("description", existing_type=sa.TEXT(), nullable=False)

    op.create_table(
        "_alembic_tmp_alertaudit",
        sa.Column("id", sa.CHAR(length=32), nullable=False),
        sa.Column("fingerprint", sa.VARCHAR(), nullable=False),
        sa.Column("tenant_id", sa.VARCHAR(), nullable=False),
        sa.Column("timestamp", sa.DATETIME(), nullable=False),
        sa.Column("user_id", sa.VARCHAR(), nullable=False),
        sa.Column("action", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###
