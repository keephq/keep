"""add pulling_enabled
Revision ID: 8438f041ee0e
Revises: 83c1020be97d
Create Date: 2024-10-22 10:38:29.857284
"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8438f041ee0e"
down_revision = "83c1020be97d"
branch_labels = None
depends_on = None


def is_sqlite():
    """Check if we're running on SQLite"""
    bind = op.get_bind()
    return bind.engine.name == "sqlite"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    if is_sqlite():
        # SQLite specific implementation
        with op.batch_alter_table("provider", schema=None) as batch_op:
            # First add the column as nullable with a default value
            batch_op.add_column(
                sa.Column(
                    "pulling_enabled",
                    sa.Boolean(),
                    server_default=sa.true(),
                    nullable=True,
                )
            )

        # Then make it not nullable if needed
        with op.batch_alter_table("provider", schema=None) as batch_op:
            batch_op.alter_column("pulling_enabled", nullable=False)
    else:
        # Implementation for other databases
        with op.batch_alter_table("provider", schema=None) as batch_op:
            batch_op.add_column(
                sa.Column(
                    "pulling_enabled",
                    sa.Boolean(),
                    nullable=False,
                    server_default=sa.true(),
                )
            )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("provider", schema=None) as batch_op:
        batch_op.drop_column("pulling_enabled")
    # ### end Alembic commands ###
