"""Add incident comments table

Revision ID: add_incident_comments
Revises: 92f4f93f2140
Create Date: 2024-07-29 18:11:00.000000

"""
from typing import List

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects.postgresql import ARRAY
from sqlalchemy_utils import UUIDType

# revision identifiers, used by Alembic.
revision = "add_incident_comments"
down_revision = "92f4f93f2140"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "incident_comment",
        sa.Column("id", UUIDType(binary=False), primary_key=True),
        sa.Column("incident_id", UUIDType(binary=False), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=False),
        sa.Column(
            "mentioned_users",
            sa.JSON(),
            nullable=False,
            server_default=sa.text("'[]'"),
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("created_by", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["incident_id"],
            ["incident.id"],
            ondelete="CASCADE",
        ),
    )
    op.create_index(
        op.f("ix_incident_comment_incident_id"),
        "incident_comment",
        ["incident_id"],
        unique=False,
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_incident_comment_incident_id"), table_name="incident_comment")
    op.drop_table("incident_comment")