"""multi-level mapping

Revision ID: 9bfa7e24a160
Revises: c0e70149c9ec
Create Date: 2025-03-14 14:21:25.231987

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "9bfa7e24a160"
down_revision = "c0e70149c9ec"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("mappingrule", schema=None) as batch_op:
        batch_op.add_column(sa.Column("is_multi_level", sa.Boolean(), nullable=False))
        batch_op.add_column(
            sa.Column(
                "new_property_name",
                sqlmodel.sql.sqltypes.AutoString(length=255),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "prefix_to_remove",
                sqlmodel.sql.sqltypes.AutoString(length=255),
                nullable=True,
            )
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("mappingrule", schema=None) as batch_op:
        batch_op.drop_column("prefix_to_remove")
        batch_op.drop_column("new_property_name")
        batch_op.drop_column("is_multi_level")
    # ### end Alembic commands ###
