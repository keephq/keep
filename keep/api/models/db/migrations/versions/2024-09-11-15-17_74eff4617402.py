"""Dedup

Revision ID: 74eff4617402
Revises: 710b4ff1d19e
Create Date: 2024-09-11 15:17:38.762175

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = "74eff4617402"
down_revision = "710b4ff1d19e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "alertfield",
        sa.Column("id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("tenant_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("field_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("provider_id", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("provider_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tenant_id", "field_name", name="uq_tenant_field"),
    )
    op.create_index(
        "ix_alert_field_provider_id_provider_type",
        "alertfield",
        ["provider_id", "provider_type"],
        unique=False,
    )
    op.create_index(
        "ix_alert_field_tenant_id", "alertfield", ["tenant_id"], unique=False
    )
    op.create_index(
        "ix_alert_field_tenant_id_field_name",
        "alertfield",
        ["tenant_id", "field_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_alertfield_field_name"), "alertfield", ["field_name"], unique=False
    )
    op.create_index(
        op.f("ix_alertfield_provider_id"), "alertfield", ["provider_id"], unique=False
    )
    op.create_index(
        op.f("ix_alertfield_provider_type"),
        "alertfield",
        ["provider_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_alertfield_tenant_id"), "alertfield", ["tenant_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("workflow", "is_disabled")
    op.drop_constraint(None, "preset", type_="foreignkey")
    op.drop_constraint(None, "preset", type_="unique")
    op.drop_constraint(None, "preset", type_="unique")
    op.drop_index(op.f("ix_preset_tenant_id"), table_name="preset")
    op.drop_index(op.f("ix_preset_created_by"), table_name="preset")
    op.alter_column("preset", "id", existing_type=sa.CHAR(length=32), nullable=True)
    op.alter_column("preset", "options", existing_type=sqlite.JSON(), nullable=False)
    op.add_column(
        "alertdeduplicationrule", sa.Column("priority", sa.INTEGER(), nullable=False)
    )
    op.drop_column("alertdeduplicationevent", "priority")
    op.alter_column(
        "alertaudit", "description", existing_type=sa.TEXT(), nullable=False
    )
    op.create_table(
        "_alembic_tmp_alertaudit",
        sa.Column("id", sa.CHAR(length=32), nullable=False),
        sa.Column("fingerprint", sa.VARCHAR(), nullable=False),
        sa.Column("tenant_id", sa.VARCHAR(), nullable=False),
        sa.Column("timestamp", sa.DATETIME(), nullable=False),
        sa.Column("user_id", sa.VARCHAR(), nullable=False),
        sa.Column("action", sa.VARCHAR(), nullable=False),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.ForeignKeyConstraint(
            ["tenant_id"],
            ["tenant.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_index(op.f("ix_alertfield_tenant_id"), table_name="alertfield")
    op.drop_index(op.f("ix_alertfield_provider_type"), table_name="alertfield")
    op.drop_index(op.f("ix_alertfield_provider_id"), table_name="alertfield")
    op.drop_index(op.f("ix_alertfield_field_name"), table_name="alertfield")
    op.drop_index("ix_alert_field_tenant_id_field_name", table_name="alertfield")
    op.drop_index("ix_alert_field_tenant_id", table_name="alertfield")
    op.drop_index("ix_alert_field_provider_id_provider_type", table_name="alertfield")
    op.drop_table("alertfield")
    # ### end Alembic commands ###
