import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ca74b4a04371"
down_revision = "9f11356d8ed9"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("alertraw", schema=None) as batch_op:
        # Get database connection to check dialect
        conn = op.get_bind()
        dialect_name = conn.dialect.name

        # Handle PostgreSQL differently to avoid NOT NULL violation
        if dialect_name == "postgresql":
            # First add the columns as nullable
            batch_op.add_column(sa.Column("error", sa.Boolean(), nullable=True))
            batch_op.add_column(
                sa.Column("error_message", sa.String(length=2048), nullable=True)
            )
            batch_op.add_column(sa.Column("dismissed", sa.Boolean(), nullable=True))

            # Update existing rows with default values
            op.execute("UPDATE alertraw SET error = false WHERE error IS NULL")
            op.execute("UPDATE alertraw SET dismissed = false WHERE dismissed IS NULL")

            # Then alter the columns to NOT NULL with default values
            op.execute("ALTER TABLE alertraw ALTER COLUMN error SET NOT NULL")
            op.execute("ALTER TABLE alertraw ALTER COLUMN dismissed SET NOT NULL")

            # Set default for future inserts
            op.execute("ALTER TABLE alertraw ALTER COLUMN error SET DEFAULT false")
            op.execute("ALTER TABLE alertraw ALTER COLUMN dismissed SET DEFAULT false")
        else:
            # For MySQL
            if dialect_name == "mysql":
                batch_op.add_column(
                    sa.Column(
                        "error",
                        sa.Boolean(),
                        nullable=False,
                        server_default=sa.text("0"),
                    )
                )
                batch_op.add_column(
                    sa.Column("error_message", sa.String(length=2048), nullable=True)
                )
                batch_op.add_column(
                    sa.Column(
                        "dismissed",
                        sa.Boolean(),
                        nullable=False,
                        server_default=sa.text("0"),
                    )
                )
            else:
                # SQLite and others
                batch_op.add_column(
                    sa.Column(
                        "error",
                        sa.Boolean(),
                        nullable=False,
                        server_default=sa.text("false"),
                    )
                )
                batch_op.add_column(
                    sa.Column("error_message", sa.String(length=2048), nullable=True)
                )
                batch_op.add_column(
                    sa.Column(
                        "dismissed",
                        sa.Boolean(),
                        nullable=False,
                        server_default="false",
                    )
                )

        # Common operations for all dialects
        batch_op.add_column(sa.Column("dismissed_at", sa.DateTime(), nullable=True))
        batch_op.add_column(
            sa.Column("dismissed_by", sa.String(length=255), nullable=True)
        )
        batch_op.create_index(
            "ix_alert_raw_tenant_id_error", ["tenant_id", "error"], unique=False
        )
        batch_op.create_index(
            "ix_alert_raw_tenant_id_timestamp", ["tenant_id", "timestamp"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_alertraw_error"), ["error"], unique=False)
        batch_op.create_index(
            batch_op.f("ix_alertraw_tenant_id"), ["tenant_id"], unique=False
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("alertraw", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_alertraw_tenant_id"))
        batch_op.drop_index(batch_op.f("ix_alertraw_error"))
        batch_op.drop_index("ix_alert_raw_tenant_id_timestamp")
        batch_op.drop_index("ix_alert_raw_tenant_id_error")
        batch_op.drop_column("error_message")
        batch_op.drop_column("error")
        batch_op.drop_column("dismissed_by")
        batch_op.drop_column("dismissed_at")
        batch_op.drop_column("dismissed")
    # ### end Alembic commands ###
