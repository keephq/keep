"""add rules-related fields to the incident

Revision ID: 87594ea6d308
Revises: 0832e0d9889a
Create Date: 2024-08-14 18:30:09.052273

"""

import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "87594ea6d308"
down_revision = "0832e0d9889a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("incident", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "rule_id",
                sqlalchemy_utils.types.uuid.UUIDType(binary=False),
                nullable=True,
            )
        )
        batch_op.add_column(
            sa.Column(
                "rule_fingerprint", sqlmodel.sql.sqltypes.AutoString(), nullable=False,
                default="", server_default=""
            )
        )
        batch_op.create_foreign_key(
            "incident_rule_id_fk", "rule", ["rule_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("rule", schema=None) as batch_op:
        batch_op.add_column(sa.Column("require_approve", sa.Boolean(), nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("incident", schema=None) as batch_op:
        batch_op.drop_constraint("incident_rule_id_fk", type_="foreignkey")
        batch_op.drop_column("rule_fingerprint")
        batch_op.drop_column("rule_id")

    with op.batch_alter_table("rule", schema=None) as batch_op:
        batch_op.drop_column("require_approve")

    # ### end Alembic commands ###
