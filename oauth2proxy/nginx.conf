events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream frontend {
        server keep-frontend:3000;
    }

    upstream backend {
        server keep-backend:8080;
    }

    upstream websocket {
        server keep-websocket-server:6001;
    }

    upstream oauth2_proxy {
        server oauth2-proxy:4180;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name localhost;

        # Auth request to oauth2-proxy
        location = /oauth2/auth {
            proxy_pass http://oauth2_proxy/oauth2/auth;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_set_header Content-Length "";
            proxy_pass_request_body off;
        }

        # OAuth2 Proxy
        location /oauth2/ {
            proxy_pass http://oauth2_proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            # Handle redirects
            proxy_redirect off;
            proxy_set_header X-Auth-Request-Redirect $scheme://$host$request_uri;
        }

        # Frontend
        location / {
            auth_request /oauth2/auth;
            auth_request_set $auth_resp_x_auth_request_user $upstream_http_x_auth_request_user;
            auth_request_set $auth_resp_x_auth_request_email $upstream_http_x_auth_request_email;
            auth_request_set $auth_resp_x_auth_request_access_token $upstream_http_x_auth_request_access_token;

            auth_request_set $auth_resp_jwt $upstream_http_x_auth_request_access_token;

            error_page 401 = /oauth2/sign_in;

            proxy_set_header X-Auth-Request-User $auth_resp_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $auth_resp_x_auth_request_email;
            proxy_set_header X-Auth-Request-Access-Token $auth_resp_x_auth_request_access_token;
            proxy_set_header X-Forwarded-Groups "admin";

            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Backend API
        location /v2/ {
            auth_request /oauth2/auth;
            auth_request_set $auth_resp_x_auth_request_user $upstream_http_x_auth_request_user;
            auth_request_set $auth_resp_x_auth_request_email $upstream_http_x_auth_request_email;

            proxy_set_header X-Auth-Request-User $auth_resp_x_auth_request_user;
            proxy_set_header X-Auth-Request-Email $auth_resp_x_auth_request_email;
            proxy_set_header X-Forwarded-Groups "admin";

            rewrite ^/v2/(.*) /$1 break;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Websocket
        location /websocket/ {
            auth_request /oauth2/auth;
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_read_timeout 86400;
        }
    }
}
